print "laopopang"
print ("laopopang")
2+3
clc
clear
a
a = 2+3;
source('~/.active-rstudio-document')
print ("laopopang")
a = 2+3;
a
getwd()
getwd()
getwd()
clear
clc
setwd("D:/Program Files/RStudio")
data = read.table('./data/r.xlsx')
data = read.table('./data/r.xlsx',head=true)
data = read.table('./data/r.xlsx',header=true)
data
View(data)
View(data)
data = read.table('./data/r.xlsx')
help
read.xlsx('.data/r.xlsx')
read('.data/r.xlsx')
data = read.table(/data/r.xlsx)
data = read.table(data/r.xlsx)
read.xlsx('.data/r.xlsx')
data = read.table('./data/r.xlsx')
data = read.table('./data/r.xlsx', header = True, sep = "")
data = read.table('./data/r.csv')
data
data = read.table('./data/r.csv', header = TRUE)
data
data = read.table('./data/r.csv', header = TRUE, sep = ",")
data
library(xlsx)
install.packages("xlsx")
library("xlsx", lib.loc="D:/program files/R/R-3.1.2/library")
library(xlsx)
library(xlsx)
data = read.xlsx('./data/r.xlsx', header = True, sep = "")
data = read.xlsx('./data/r.xlsx')
data = read.xlsx(./data/r.xlsx)
data = read.xlsx(data/r.xlsx)
data = read.xlsx(r.xlsx)
data = read.xlsx(r.xlsx)
data = read.xlsx(r.xlsx,1)
data = read.xlsx('./data/r.xlsx',1)
data
data = read.xlsx('/data/r.xlsx',1)
a<-3
a=4
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url(uhurl)
con = url(hurl)
htmlCode = readLines(con)
close(con)
sapply(htmlCode[c(10,20,30,100)],nchar)
sample[1:5]
sample(1:5)
sample(1:5)
sample(1:5)
install.packages("dplyr")
library("dplyr", lib.loc="D:/program files/R/R-3.1.2/library")
library(dplyr)
#liaoxx 1/21/2015
## 1. Merges the training and the test sets to create one data set.
Testdata <- read.table("test/X_test.txt")
Traindata <- read.table("train/X_train.txt")
X <- rbind(Testdata,Traindata)
Testsub <- read.table("test/subject_test.txt")
Trainsub <- read.table("train/subject_train.txt")
S <- rbind(Testsub, Trainsub)
Testlabel <- read.table("test/y_test.txt")
Trainlabel <- read.table("train/y_train.txt")
Y <- rbind(Testlabel, Trainlabel)
## Clean Environment
rm(Testdata, Traindata, Testsub, Trainsub, Testlabel, Trainlabel)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
featureslist <- read.table("features.txt")
features <- grep("(std|mean[^F])", featureslist[, 2])
X <- X[, features]
## 3. Uses descriptive activity names to name the activities in the data set.
activity <- read.table("activity_labels.txt")
Y[,1] = activity[Y[,1], 2]
## 4. Appropriately labels the data set with descriptive variable names.
names(X) <- gsub("\\(|\\)","",toupper(featureslist[features, 2]))
names(Y) <- "ACTIVITY"
names(S) <- "SUBJECT"
Dataset <- cbind(S, Y, X)
setwd("C:/Users/Liaoxx/Desktop/r/Project/UCI HAR Dataset")
#liaoxx 1/21/2015
## 1. Merges the training and the test sets to create one data set.
Testdata <- read.table("test/X_test.txt")
Traindata <- read.table("train/X_train.txt")
X <- rbind(Testdata,Traindata)
Testsub <- read.table("test/subject_test.txt")
Trainsub <- read.table("train/subject_train.txt")
S <- rbind(Testsub, Trainsub)
Testlabel <- read.table("test/y_test.txt")
Trainlabel <- read.table("train/y_train.txt")
Y <- rbind(Testlabel, Trainlabel)
## Clean Environment
rm(Testdata, Traindata, Testsub, Trainsub, Testlabel, Trainlabel)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
featureslist <- read.table("features.txt")
features <- grep("(std|mean[^F])", featureslist[, 2])
X <- X[, features]
## 3. Uses descriptive activity names to name the activities in the data set.
activity <- read.table("activity_labels.txt")
Y[,1] = activity[Y[,1], 2]
## 4. Appropriately labels the data set with descriptive variable names.
names(X) <- gsub("\\(|\\)","",toupper(featureslist[features, 2]))
names(Y) <- "ACTIVITY"
names(S) <- "SUBJECT"
Dataset <- cbind(S, Y, X)
head(Dataset)
head(Dataset)
CleanData <- aggregate(Dataset[, 3:ncol(Dataset)], by=list(subject = Dataset$SUBJECT,
activity = Dataset$ACTIVITY),mean)
CleanData
head(CleanData)
write.table(CleanData, "TidyDataSet.txt")
CleanData <- aggregate(Dataset[, 3:ncol(Dataset)], by=list(Dataset$SUBJECT,
Dataset$ACTIVITY),mean)
head(cleandata)
head(Cleandata)
head(CleanData)
names(CleanData)
CleanData <- aggregate(Dataset[, 3:ncol(Dataset)], by=list(SUBJECT = Dataset$SUBJECT,
ACTIVITY = Dataset$ACTIVITY),mean)
names(CleanData)
#liaoxx 1/21/2015
## 1. Merges the training and the test sets to create one data set.
Testdata <- read.table("test/X_test.txt")
Traindata <- read.table("train/X_train.txt")
X <- rbind(Testdata,Traindata)
Testsub <- read.table("test/subject_test.txt")
Trainsub <- read.table("train/subject_train.txt")
S <- rbind(Testsub, Trainsub)
Testlabel <- read.table("test/y_test.txt")
Trainlabel <- read.table("train/y_train.txt")
Y <- rbind(Testlabel, Trainlabel)
## Clean Environment
rm(Testdata, Traindata, Testsub, Trainsub, Testlabel, Trainlabel)
## 2. Extracts only the measurements on the mean and standard deviation for each measurement.
featureslist <- read.table("features.txt")
features <- grep("(std|mean[^F])", featureslist[, 2])
X <- X[, features]
## 3. Uses descriptive activity names to name the activities in the data set.
activity <- read.table("activity_labels.txt")
Y[,1] = activity[Y[,1], 2]
## 4. Appropriately labels the data set with descriptive variable names.
names(X) <- gsub("\\(|\\)","",toupper(featureslist[features, 2]))
names(Y) <- "ACTIVITY"
names(S) <- "SUBJECT"
Dataset <- cbind(S, Y, X)
## 5. Creates a 2nd, independent tidy data set with the average of each variable for each activity and each subject.
CleanData <- aggregate(Dataset[, 3:ncol(Dataset)], by=list(SUBJECT = Dataset$SUBJECT,
ACTIVITY = Dataset$ACTIVITY),mean)
# Write table
write.table(CleanData, "TidyDataSet.txt")
write.table(CleanData, "TidyDataSet.txt",row.names=F)
